#ifndef AM_SLIB_TRACER_H
#define AM_SLIB_TRACER_H

#include <iostream>
#include <exception>
#include <sstream>
#include <stdexcept>
#include <tchar.h>

// Import/export members of class in/from DLL library
#ifdef AM_SLIB_EXPORTS
#define IPC_LIB_API __declspec(dllexport)
#else
#define IPC_LIB_API __declspec(dllimport)
#endif

namespace slib {
	// Enumeration for selecting output system
	enum OutputLevel {
		Console,
		Window
	};

	// Enumeration for message type which Tracer have got
	enum TraceLevel {
		Info,
		Warning,
		Error
	};

	// TracerW class
	class IPC_LIB_API TracerW {
	private:
		std::wostream *info, *warn, *err;
		std::wostringstream *wnd;
		OutputLevel outLvl;
	public:
		// Constructor with selecting output system (console/windows)
		explicit TracerW(OutputLevel&&);

		// Constructor with passing a referenceû to output streams 
		// (each stream is trace level)
		explicit TracerW(std::wostream&, std::wostream&, std::wostream&);

		// Destructor
		~TracerW();

		std::wostream& Trace(TraceLevel&&);

	};

	// Unicode defines
	#ifdef UNICODE
	typedef TracerW Tracer;
	#else
	typedef TracerA Tracer;
	#endif
}



#endif // AM_SLIB_TRACER_H
