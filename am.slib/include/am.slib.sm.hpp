#ifndef AM_SLIB_SERVICE_MANAGER_H
#define AM_SLIB_SERVICE_MANAGER_H

#include "am.slib.service.hpp"

namespace slib {
	#pragma warning(push)
	#pragma warning(disable: 4251)
	// Service Manager Class
	class SLIB_LIB_API ServiceManager {
	private:
		LogTracer& tracer;
		std::wstring serviceName;
		std::wstring servicePath;

	public:
		// Constructor
		ServiceManager(LogTracer&, const std::wstring&, const std::wstring&) noexcept;

		// Installs Service via Service Control Manager
		void InstallService() noexcept(false);

		// Uninstalls Service via Service Control Manager
		void UninstallService() noexcept(false);

		// Runs Service via Service Control Manager
		void RunService() noexcept(false);

	};
	#pragma warning(pop)

}

#endif // AM_SLIB_SERVICE_MANAGER_H
