#include "../include/am.slib.tracer.hpp"

namespace slib {
	// Constructor with selecting output system (console/windows)
	TracerW::TracerW(OutputLevel&& _outLvl):
		info(nullptr), warn(nullptr), err(nullptr), wnd(nullptr), outLvl(_outLvl)
	{
		if (outLvl == OutputLevel::Console) {
			info = &std::wcout;
			warn = &std::wcout;
			err = &std::wcerr;
		}
		else if (outLvl == OutputLevel::Window) {
			wnd = new std::wostringstream();
			err = warn = info = reinterpret_cast<std::wostream*>(wnd);
		}
	}

	// Constructor with passing a referenceû to output streams 
	// (each stream is trace level)
	TracerW::TracerW(std::wostream& _info, std::wostream& _warn, std::wostream& _err):
		info(&_info), warn(&_warn), err(&_err), wnd(nullptr), outLvl(OutputLevel::Console) { }

	// Destructor
	TracerW::~TracerW() {
		if (outLvl == OutputLevel::Window) delete wnd;
	}

	// t1
	std::wostream& TracerW::Trace(TraceLevel&& traceLvl) {
		
	}


}