#include <tchar.h>
#include "../include/am.ams.service.hpp"
#include "am.slib.tracer.hpp"
#include "am.slib.sm.hpp"

int _tmain(int argc, TCHAR* argv[]) {
	using slib::Tracer;
	using slib::OutputLevel;
	using slib::ServiceManager;

	// 
	if (argc - 1 == 0) {
		auto tracer = std::make_shared<Tracer>(OutputLevel::Console);
		ams::AntimalwareServiceFactory serviceFactory(tracer);
		InitService(tracer, serviceFactory);
	}
	// 
	else {
		Tracer tracer(OutputLevel::Console);
		ServiceManager sm { tracer, L"AntimalwareService", argv[0] };
		if (_tcscmp(argv[argc - 1], TEXT("--install")) == 0) {
			sm.InstallService();
		}
		else if (_tcscmp(argv[argc - 1], TEXT("--uninstall")) == 0) {
			sm.UninstallService();
		}
		else if (_tcscmp(argv[argc - 1], TEXT("--start")) == 0) {
			sm.RunService();
		}
	}
	system("pause");
	return 0;
}
