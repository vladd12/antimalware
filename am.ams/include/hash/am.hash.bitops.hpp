#ifndef AM_HASH_BITOPS_H
#define AM_HASH_BITOPS_H

#include <cstdint>

namespace hash {
	// Converting little endian to big endian for uint32_t
	uint32_t ByteSwap32(uint32_t x);

	// Converting little endian to big endian for uint64_t
	uint64_t ByteSwap64(uint64_t x);

	// Rotate bits right
	uint32_t rotr(uint32_t x, uint16_t n);

	// Shift bits right
	uint32_t shr(uint32_t x, uint16_t n);
	
	// Lower sigma0 func
	uint32_t sig0(uint32_t x);

	// Lower sigma1 func
	uint32_t sig1(uint32_t x);

	// Sigma0 definition func
	uint32_t Sigma0(uint32_t x);

	// Sigma1 definition func
	uint32_t Sigma1(uint32_t x);

	// Choose
	uint32_t Choose(uint32_t x, uint32_t y, uint32_t z);

	// Majority decision
	uint32_t Majority(uint32_t x, uint32_t y, uint32_t z);

	// Check system endian
	bool IsBigEndian();

}

#endif // AM_HASH_BITOPS_H
