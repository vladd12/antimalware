#ifndef AM_DB_STRUCTURES_H
#define AM_DB_STRUCTURES_H

#include <cstdint>
#include <Windows.h>
#include "../hash/am.hash.sha256.hpp"

namespace db {
	// Offset of signature's location in file
	class SignatureRange {
	public:
		uint32_t Start;
		uint32_t End;

		// Constructor
		SignatureRange() noexcept;

		// Constructor with params
		SignatureRange(uint32_t start, uint32_t end) noexcept;

	}; // Size: 8 bytes

	// Signature class
	class Signature {
	public:
		uint8_t FirstBytes[8];   // First 8 bytes of signature
		uint32_t Length;         // Length of signature
		SignatureRange Range;    // Offset of signature
		hash::SHA256Hash Hash;   // Hash value of signature

		// Constructor
		Signature() noexcept;

	}; // Size: 52 bytes

	// Record in DB structure
	class Record {
	public:
		char* Name;				 // Signature name
		uint8_t NameLength;      // Length of signature name
		Signature Signature;     // Signature object

		// Constructor
		Record() noexcept;

		// Copying constructor
		Record(const Record& rhs) noexcept;

		// Destructor
		~Record() noexcept;

		// Alloc memory for C-string with signature's name 
		void AllocName(uint8_t nameLen) noexcept;

		// Copy data from string
		void CopyName(const char* src) noexcept;

	};

}

#endif // AM_DB_STRUCTURES_H
