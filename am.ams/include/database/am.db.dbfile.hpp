#ifndef AM_DB_DBFILE_H
#define AM_DB_DBFILE_H

#include <fstream>
#include <iostream>
#include "am.db.structures.hpp"

namespace db {
	// Check existing file (ASCII)
	bool IsFileExistA(LPCSTR FileName);

	// Check existing file (Unicode)
	bool IsFileExistW(LPCWSTR FileName);

	// Unicode defines
	#ifdef UNICODE
	#define IsFileExist IsFileExistW
	#else
	#define IsFileExist IsFileExistA
	#endif

	// Database of signatures class
	class DBFile {
	protected:
		std::fstream hFile;       // File stream
		uint32_t RecordCount;     // Num of records in database
		const char* DBSignature;  // DB file signature
		PWSTR last;

		// Virtual
		virtual bool Open(PCWSTR filePath) = 0;
		virtual bool Open(PCSTR filePath) = 0;

	public:
		// Constructor
		DBFile() noexcept;

		// Checking state of file stream
		virtual bool IsOpen() noexcept;

		// Closing file stream
		virtual void CloseFile() noexcept;

		// Reopen last opened and closed file
		virtual bool ReOpen() noexcept;

		// Getting count of records in database
		virtual uint32_t GetRecordCount() noexcept;

	};

	// Class for writing records in database file
	class DBFileWriter: public DBFile {
	private:
		// Get record from request
		Record GetRecord(PCWSTR filePath, PCSTR sigName, uint32_t& offset, uint32_t& length, SignatureRange& range);

	public:
		// Delete default constructor
		DBFileWriter() noexcept;

		// Opening file
		virtual bool Open(PCWSTR filePath) override;
		
		// Opening file
		virtual bool Open(PCSTR filePath) override;

		// Add record in database file
		bool AddRecord(Record& record);

		// Add record in database from file
		bool AddRecord(PCWSTR filePath, PCSTR sigName, uint32_t offset, uint32_t length, SignatureRange range);

		// Add record in database from file
		bool AddRecord(PCSTR filePath, PCSTR sigName, uint32_t offset, uint32_t length, SignatureRange range);
		
	};

	// Class for reading records from database file
	class DBFileReader: public DBFile {
	private:

	public:
		// Delete default constructor
		DBFileReader() noexcept;

		// Opening file
		virtual bool Open(PCWSTR filePath) override;

		// Opening file
		virtual bool Open(PCSTR filePath) override;

		// Read record from database
		bool ReadNextRecord(Record* record);

		// Set file reader to begin of DB file
		void SetToStart();
		
	};

}

#endif // AM_DB_DBFILE_H
