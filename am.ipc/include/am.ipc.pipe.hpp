#ifndef AM_IPC_PIPE_H
#define AM_IPC_PIPE_H

#include <exception>
#include <stdexcept>
#include <memory>
#include <Windows.h>
#include <tchar.h>

/// Import/export members of class in/from DLL library
#ifdef AM_IPC_PIPE_EXPORTS
#define IPCLIB_API __declspec(dllexport)
#else
#define IPCLIB_API __declspec(dllimport)
#endif

namespace IPC {
	// Types definition
	typedef TCHAR tchar, _tchar;
	typedef unsigned int uint, _uint;

	// Class of Pipe
	class IPCLIB_API Pipe {
	private:
		HANDLE _hPipe;
		uint _bufSize;
		HANDLE evUsed, evFree;

		// Restriction copying of pipes
		Pipe(const Pipe&) { }

		// Restriction copying of pipes
		void operator=(const Pipe&) { }

	public:
		explicit Pipe(const tchar* const, const uint) throw (...);
		~Pipe() throw (...);
		void GetMsg();
		void SendMsg();
	};

	// ttt
	IPCLIB_API std::shared_ptr<Pipe> CreatePipe(const tchar* const, const uint&);



}

#endif // AM_IPC_PIPE_H

