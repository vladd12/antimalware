#ifndef AM_IPC_EXIST_PIPE_H
#define AM_IPC_EXIST_PIPE_H

#include "am.ipc.base-pipe.hpp"

namespace IPC {

	class IPC_LIB_API ExistPipe: public BasePipe {
	private:
		// Restriction copying of pipes
		ExistPipe(const ExistPipe&) { }

		// Restriction copying of pipes
		void operator=(const ExistPipe&) { }

	public:
		explicit ExistPipe(const tchar* const) throw (std::runtime_error);
		~ExistPipe() throw (std::runtime_error);

		// Read message from Pipe by owner
		DWORD GetMsg() throw (std::runtime_error);
	};

	// Fabric for Existing Pipes
	IPC_LIB_API std::shared_ptr<ExistPipe> CreateExistPipe(const tchar* const);

}

#endif // AM_IPC_EXIST_PIPE_H
