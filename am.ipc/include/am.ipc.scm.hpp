#ifndef SERVER_CM_H
#define SERVER_CM_H

#include "am.ipc.cm.hpp"

namespace ipc {
	// Function gives random number in range [start, end]
	int GetRandNum(int start, int end) noexcept;

	#pragma warning(push)
	#pragma warning(disable: 4251)
	// Server connection manager class
	class IPC_LIB_API ServerConnectionManager : public ConnectionManager<ServerPipe> {
	private:
		std::size_t cNum;
		static const std::string conName;
		
	public:
		// Default constructor
		ServerConnectionManager() noexcept;

		// Destructor
		~ServerConnectionManager() noexcept;

		// Get connection
		virtual ServerPipe GetConnection() noexcept override;

		// Auth protocol for server
		virtual AuthStat Auth(ServerPipe& listener) noexcept override;

	};
	#pragma warning(pop)

}

#endif // SERVER_CM_H
